{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91906\\\\Desktop\\\\Khaali\\\\WebDev\\\\Test\\\\vfdntr--run\\\\src\\\\demo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './index.css';\nimport { Button, Card, Form, Input, Select, Space, Typography } from 'antd';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst App = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [size, setSize] = useState('default');\n  return /*#__PURE__*/_jsxDEV(Form, {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18\n    },\n    form: form,\n    name: \"dynamic_form_complex\",\n    style: {\n      maxWidth: 6000\n    },\n    autoComplete: \"off\",\n    initialValues: {\n      items: [{}]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"items\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          rowGap: 16,\n          flexDirection: 'column'\n        },\n        children: [fields.map(field => /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"dashed\",\n            onClick: () => {\n              remove(field.name);\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: [field.name, 'name'],\n            style: {\n              margin: '0 8px',\n              display: 'inline-block',\n              width: 'calc(50% - 8px)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            style: {\n              display: 'inline-block',\n              width: 'calc(50% - 8px)'\n            },\n            name: [field.name, 'type'],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select type\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"Age\",\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Address\",\n                children: \"String\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Nested\",\n                children: \"Nested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), form.getFieldValue(['items', field.name, 'type']) === 'Nested' && /*#__PURE__*/_jsxDEV(Form.Item, {\n            shouldUpdate: true,\n            children: () => /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: size,\n              onClick: () => add([field.name, 'list'], {}),\n              block: true,\n              children: \"+ Add sub item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this)]\n        }, field.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => add(),\n          block: true,\n          children: \"+ Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      noStyle: true,\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(form.getFieldsValue(), null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ODC/sj9LNPVhewv0eFm4WbAjbjw=\", false, function () {\n  return [Form.useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Card","Form","Input","Select","Space","Typography","useState","jsxDEV","_jsxDEV","Option","App","_s","form","useForm","size","setSize","labelCol","span","wrapperCol","name","style","maxWidth","autoComplete","initialValues","items","children","List","fields","add","remove","display","rowGap","flexDirection","map","field","extra","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Item","margin","width","placeholder","value","getFieldValue","shouldUpdate","block","key","noStyle","JSON","stringify","getFieldsValue","_c","$RefreshReg$"],"sources":["C:/Users/91906/Desktop/Khaali/WebDev/Test/vfdntr--run/src/demo.js"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { Button, Card, Form, Input, Select, Space, Typography } from 'antd';\r\nimport { useState } from 'react';\r\n\r\nconst { Option } = Select;\r\n\r\nconst App = () => {\r\n  const [form] = Form.useForm();\r\n  const [size, setSize] = useState('default');\r\n  return (\r\n    <Form\r\n      labelCol={{\r\n        span: 6,\r\n      }}\r\n      wrapperCol={{\r\n        span: 18,\r\n      }}\r\n      form={form}\r\n      name=\"dynamic_form_complex\"\r\n      style={{\r\n        maxWidth: 6000,\r\n      }}\r\n      autoComplete=\"off\"\r\n      initialValues={{\r\n        items: [{}],\r\n      }}\r\n    >\r\n      <Form.List name=\"items\">\r\n        {(fields, { add, remove }) => (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              rowGap: 16,\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            {fields.map((field) => (\r\n              <Card\r\n                size=\"small\"\r\n                key={field.key}\r\n                extra={\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      remove(field.name);\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                }\r\n              >\r\n                <Form.Item\r\n                  name={[field.name, 'name']}\r\n                  style={{\r\n                    margin: '0 8px',\r\n                    display: 'inline-block',\r\n                    width: 'calc(50% - 8px)',\r\n                  }}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  style={{\r\n                    display: 'inline-block',\r\n                    width: 'calc(50% - 8px)',\r\n                  }}\r\n                  name={[field.name, 'type']}\r\n                >\r\n                  <Select placeholder=\"Select type\">\r\n                    <Option value=\"Age\">Number</Option>\r\n                    <Option value=\"Address\">String</Option>\r\n                    <Option value=\"Nested\">Nested</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                {form.getFieldValue(['items', field.name, 'type']) === 'Nested' && (\r\n                  <Form.Item shouldUpdate>\r\n                    {() => (\r\n                      <Button\r\n                        type=\"primary\"\r\n                        size={size}\r\n                        onClick={() => add([field.name, 'list'], {})}\r\n                        block\r\n                      >\r\n                        + Add sub item\r\n                      </Button>\r\n                    )}\r\n                  </Form.Item>\r\n                )}\r\n              </Card>\r\n            ))}\r\n\r\n            <Button type=\"primary\" onClick={() => add()} block>\r\n              + Add Item\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Form.List>\r\n\r\n      <Form.Item noStyle shouldUpdate>\r\n        {() => (\r\n          <Typography>\r\n            <pre>{JSON.stringify(form.getFieldsValue(), null, 2)}</pre>\r\n          </Typography>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}